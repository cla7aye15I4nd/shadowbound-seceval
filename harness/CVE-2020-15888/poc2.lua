function test(do_yield) error 'fail!' end coro = coroutine.wrap(

function() function errfunc() function errfunc(x)

    pcall(function()

        u = setmetatable({},

        {

            __gc = function(a) B =

                coroutine

                .create(function() do assert(

                    setmetatable(

                    {},

                    {

                        __gc

                        =

                        function(  )

                            function crash(  )

                                t[pairs( a )]=0

                            end

                            for i = 1, 5 do crash( )end

                        end

                    }))

                    if k then end end end)

                    coroutine.resume(B) end

                }) require 'mod' end) 'fail' end coro =

                coroutine.wrap(function() print(xpcall(test, errfunc)) end)

            end print(xpcall(test, errfunc)) end) coro() coro()
